{"ts":1355579816669,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\n/**\n * Module dependencies.\n */\n\nvar express = require('express')\n  , routes = require('./routes')\n  , api = require('./routes/api')\n  , directives = require('./routes/directives')\n  , http = require('http')\n  , path = require('path');\n\nvar app = express();\n\napp.configure(function(){\n  app.set('port', process.env.PORT || 3000);\n  app.set('views', __dirname + '/views');\n  app.set('view engine', 'jade');\n  app.use(express.favicon());\n  app.use(express.logger('dev'));\n  app.use(express.bodyParser());\n  app.use(express.methodOverride());\n  app.use(express.cookieParser('your secret here'));\n  app.use(express.session());\n  app.use(app.router);\n  app.use(require('less-middleware')({ src: __dirname + '/public' }));\n  app.use(express.static(path.join(__dirname, 'public')));\n});\n\napp.configure('development', function(){\n  app.use(express.errorHandler({ dumpExceptions: true, showStack: true }));\n});\n\napp.configure('production', function(){\n  app.use(express.errorHandler());\n});\n\n// Routes\n\napp.get('/', routes.index);\n\n// Directives\n\napp.get('/directives/node', directives.node);\napp.get('/directives/childNodes', directives.childNodes);\n\n// JSON API\n\napp.get('/api/tree', api.tree);\n\n// Start server\n\nhttp.createServer(app).listen(app.get('port'), function(){\n  console.log(\"Express server listening on port \" + app.get('port'));\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":1340}]],"length":1340}
{"contributors":[],"silentsave":false,"ts":1356803541051,"patch":[[{"diffs":[[0,"i')\n"],[-1,"  , directives = require('./routes/directives')\n"],[0,"  , "]],"start1":130,"start2":130,"length1":56,"length2":8},{"diffs":[[0,");\n\n"],[-1,"// Directives\n\napp.get('/directives/node', directives.node);\napp.get('/directives/childNodes', directives.childNodes);\n"],[0,"\n// "]],"start1":972,"start2":972,"length1":127,"length2":8}]],"length":1173,"saved":false}
{"ts":1356871490513,"patch":[[{"diffs":[[0,"s/api')\n"],[1,"  , maps = require('./routes/api/maps')\n"],[0,"  , http"]],"start1":126,"start2":126,"length1":16,"length2":56},{"diffs":[[0,"i.tree);"],[1,"\napp.get('/api/maps', maps.tree);"],[0,"\n\n// Sta"]],"start1":1053,"start2":1053,"length1":16,"length2":49}]],"length":1246,"saved":false}
{"ts":1356871648247,"patch":[[{"diffs":[[0,"', maps."],[-1,"tree"],[1,"?"],[0,");\n\n// S"]],"start1":1080,"start2":1080,"length1":20,"length2":17}]],"length":1243,"saved":false}
{"ts":1356871944572,"patch":[[{"diffs":[[0,"maps"],[1,"/:id"],[0,"', maps."],[-1,"?"],[1,"findById);\napp.put('/api/maps/:id', maps.updateById"],[0,");\n\n"]],"start1":1076,"start2":1076,"length1":17,"length2":71}]],"length":1297,"saved":false}
{"ts":1356872050386,"patch":[[{"diffs":[[0,"es/api')"],[1,"   //TODO: remove"],[0,"\n  , map"]],"start1":125,"start2":125,"length1":16,"length2":33},{"diffs":[[0,"i.tree);"],[1,"     //TODO: remove"],[0,"\napp.get"]],"start1":1070,"start2":1070,"length1":16,"length2":35}]],"length":1333,"saved":false}
{"ts":1356872076976,"patch":[[{"diffs":[[0,": remove"],[1," line"],[0,"\n  , map"]],"start1":142,"start2":142,"length1":16,"length2":21},{"diffs":[[0,": remove"],[1," line"],[0,"\napp.get"]],"start1":1094,"start2":1094,"length1":16,"length2":21}]],"length":1343,"saved":false}
{"contributors":[],"silentsave":false,"ts":1356963338585,"patch":[[{"diffs":[[0,"s')\n"],[-1,"  , api = require('./routes/api')   //TODO: remove line\n"],[0,"  , "]],"start1":96,"start2":96,"length1":64,"length2":8},{"diffs":[[0,"('path')"],[-1,";"],[1,"\n  , mongo = require('mongodb');\n\n"],[0,"\n\nvar ap"]],"start1":185,"start2":185,"length1":17,"length2":50},{"diffs":[[0,");\n});\n\n"],[1,"// DB\n\nvar Server = mongo.Server,\n    Db = mongo.Db,\n    BSON = mongo.BSONPure;\n\nvar server = new Server('ds047037.mongolab.com', 47037, { auto_reconnect: true });\nvar db = new Db('todomap', server, {native_parser:false});\n\n\ndb.open(function(err, db) {\n    console.log(\"Connecting to DB\");\n    if (err) {\n        console.log(\"Connection to DB failed: \" + err);\n        throw err;\n    }\n    console.log(\"Connecting to DB done\");\n});\n\ndb.authenticate( \"todoapp\", \"todoapp\", function( err, result){ \n    console.log(\"Authentication to DB\");\n    if(err){\n        console.log(\"Authentication to DB failed: \" + err);\n        throw err;\n    }\n    console.log(\"Authentication to DB done\");\n});\n\n"],[0,"// Route"]],"start1":967,"start2":967,"length1":16,"length2":703},{"diffs":[[0,"ON API\n\n"],[1,"//"],[0,"app.get("]],"start1":1708,"start2":1708,"length1":16,"length2":18}]],"length":2009,"saved":false}
{"ts":1356964749834,"patch":[[{"diffs":[[0,"th')"],[-1,"\n  , mongo = require('mongodb')"],[0,";\n\n\n"]],"start1":189,"start2":189,"length1":39,"length2":8},{"diffs":[[0,");\n\n"],[-1,"// DB\n\nvar Server = mongo.Server,\n    Db = mongo.Db,\n    BSON = mongo.BSONPure;\n\nvar server = new Server('ds047037.mongolab.com', 47037, { auto_reconnect: true });\nvar db = new Db('todomap', server, {native_parser:false});\n\n\ndb.open(function(err, db) {\n    console.log(\"Connecting to DB\");\n    if (err) {\n        console.log(\"Connection to DB failed: \" + err);\n        throw err;\n    }\n    console.log(\"Connecting to DB done\");\n});\n\ndb.authenticate( \"todoapp\", \"todoapp\", function( err, result){ \n    console.log(\"Authentication to DB\");\n    if(err){\n        console.log(\"Authentication to DB failed: \" + err);\n        throw err;\n    }\n    console.log(\"Authentication to DB done\");\n});\n"],[0,"\n// "]],"start1":940,"start2":940,"length1":694,"length2":8}]],"length":1292,"saved":false}
