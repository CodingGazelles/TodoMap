{"ts":1356704537369,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1356704962194,"patch":[[{"diffs":[[1,"/*\n * Copyright (c) <2012> <AHN JAE-HA> \n * \n * version 0.0.1\n * angularJS Tree Menu\n * \n */\n  \n \nangular.module('euTree.directive', [])\n.directive('treeElement', function($compile)\n{\n    return {\n        restrict: 'E', //Element\n        link: function (scope, element, attrs)\n        {\n            scope.tree = scope.node;\n \n            var visibility = ( attrs.nodeState != \"collapse\" ) || 'style=\"display: none;\"';\n \n            if( scope.tree.children.length )\n            {\n                for(var i in scope.tree.children)\n                {\n                    if( scope.tree.children[i].children.length )\n                    {\n                        scope.tree.children[i].className = \"eu_\" + attrs.nodeState + \" eu_deselected\";\n                    }\n                    else\n                    {\n                        scope.tree.children[i].className = \"eu_child\" + \" eu_deselected\";\n                    }\n                }\n \n                var template = angular.element('<ul ' + visibility + '><li ng-repeat=\"node in tree.children\" node-id={{node.' + attrs.nodeId + '}} ng-class=\"node.className\">{{node.' + attrs.nodeName + '}}<tree-element tree=\"node\" node-id=' + attrs.nodeId + ' node-name=' + attrs.nodeName + ' node-state=' + attrs.nodeState + '></tree-element></li></ul>');\n \n                var linkFunction = $compile(template);\n                linkFunction(scope);\n                element.replaceWith( template );\n            }\n            else\n            {\n                element.remove();\n            }\n        }\n     };\n})\n.directive('euTree', function($compile)\n{\n    return {\n        restrict: 'E', //Element\n        link: function (scope, element, attrs)\n        {\n            scope.selectedNode = null;\n \n            //CSS for TREE\n            var sheet = document.createElement('style')\n            sheet.innerHTML = \n                \"eu-tree ul{margin:0;padding:0;list-style:none;border:none;overflow:hidden;text-decoration:none;color:#555}\" + \n                \"eu-tree li{position:relative;padding:0 0 0 20px;font-size:13px;font-weight:initial;line-height:18px;cursor:pointer}\" + \n                \"eu-tree .eu_expand{background:url(\" + attrs.expandIcon + \") no-repeat}\" +\n                \"eu-tree .eu_collapse{background:url(\" + attrs.collapseIcon + \") no-repeat}\" + \n                \"eu-tree .eu_child{background:url(\" + attrs.childIcon + \") no-repeat}\" + \n                \"eu-tree .eu_selected{font-weight:bold;}\" +\n                \"eu-tree .hide{display:none;}\" +\n                \"eu-tree .eu_deselected{font-weight:normal;}\";\n            document.body.appendChild(sheet);\n \n \n            scope.$watch( attrs.treeData, function(val)\n            {\n                for(var i in scope[attrs.treeData])\n                {\n                    if( scope[attrs.treeData][i].children.length )\n                    {\n                        scope[attrs.treeData][i].className = \"eu_\" + attrs.nodeState + \" eu_deselected\";\n                    }\n                    else\n                    {\n                        scope[attrs.treeData][i].className = \"eu_child\" + \" eu_deselected\";\n                    }\n                }\n \n                var template = angular.element('<ul id=\"euTreeBrowser\" class=\"filetree treeview-famfamfam treeview\"><li ng-repeat=\"node in ' + attrs.treeData + '\" node-id={{node.' + attrs.nodeId + '}} ng-class=\"node.className\">{{node.' + attrs.nodeName + '}}<tree-element tree=\"node\" node-id=' + attrs.nodeId + ' node-name=' + attrs.nodeName + ' node-state=' + attrs.nodeState + '></tree-element></li></ul>');\n \n                var linkFunction = $compile(template);\n                linkFunction(scope);\n                element.html(null).append( template );\n \n \n \n                //Click Event\n                angular.element(document.getElementById('euTreeBrowser')).unbind().bind('click', function(e)\n                {\n                    if(angular.element(e.target).length)\n                    {\n                        scope.previousElement = scope.currentElement;\n                         \n                        scope.currentElement = angular.element(e.target);\n                         \n                        scope.$broadcast('nodeSelected', { selectedNode: scope.currentElement.attr('node-id') });\n \n                        if( scope.previousElement )\n                        {\n                            scope.previousElement.addClass(\"eu_deselected\").removeClass(\"eu_selected\");   \n                        }\n                        scope.currentElement.addClass(\"eu_selected\").removeClass(\"eu_deselected\");\n \n                        if( scope.currentElement.children().length )\n                        {\n                            scope.currentElement.children().toggleClass(\"hide\");\n                            //$(e.target).children().slideToggle(\"fast\");\n \n                            scope.currentElement.toggleClass(\"eu_collapse\");\n                            scope.currentElement.toggleClass(\"eu_expand\");\n                        }\n                    }\n \n                });\n \n \n \n            }, true );\n        }\n    };\n});â€‹"]],"start1":0,"start2":0,"length1":0,"length2":5101}]],"length":5101,"saved":false}
